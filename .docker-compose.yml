version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672" # Management interface
      - "5672:5672"   # RabbitMQ service
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  user-service:
    build:
      context: ./user
      dockerfile: .Dockerfile
    image: clotidestark/user-service:1.0.0  
    environment:
      MONGO_URI: mongodb://mongo:27017/user_travels
      RABBITMQ_URL: amqp://rabbitmq:5672
    ports:
      - "3001:3001"
    depends_on:
      - mongo
      - rabbitmq
    restart: unless-stopped

  hotel-service:
    build:
      context: ./hotels
      dockerfile: .Dockerfile
    image: clotidestark/hotel-service:1.0.0  
    environment:
      MONGO_URI: mongodb://mongo:27017/hotel_travels
      RABBITMQ_URL: amqp://rabbitmq:5672
    ports:
      - "3002:3002"
    depends_on:
      - mongo
      - rabbitmq
    restart: unless-stopped

  booking-service:
    build:
      context: ./bookings
      dockerfile: .Dockerfile
    volumes:
      - ./booking/data:/app/data # Ensure your service writes to /app/data
    image: clotidestark/booking-service:1.0.0  
    environment:
      SQLITE_DB_PATH: path/to/your/database.sqlite
      RABBITMQ_URL: amqp://rabbitmq:5672
    ports:
      - "3003:3003"
    depends_on:
      - rabbitmq
    restart: unless-stopped

volumes:
  rabbitmq_data:
  mongo_data:
  shared-volume:
    external: true   

